name: tests

on:
  push:
    branches:
      - "master"
      - "ci"

  pull_request:
    branches:
      - "master"
      - "dev"

jobs:
  tests:
    strategy:
      matrix:
        # minimum supported rust version
        rust: [1.32.0, stable]
        on:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          - { os: macos-latest, target: x86_64-apple-darwin }
          - { os: windows-latest, target: x86_64-pc-windows-msvc }
        include:
          - use-cross: false

    runs-on: ${{ matrix.on.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.on.target }}
          override: true

      - name: Build tests
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use-cross }}
          command: test
          args: --no-run --target ${{ matrix.on.target }}

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use-cross }}
          command: test
          args: --target ${{ matrix.on.target }}

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt

      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --examples --tests -- -D warnings

  codecov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Check coverage
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: latest
          args: --ignore-tests --workspace --engine llvm -- --test-threads 1

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code_coverage_result
          path: cobertura.xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          files: cobertura.xml
